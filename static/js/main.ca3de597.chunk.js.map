{"version":3,"sources":["images sync /^/.*/.svg$","images/avatar_dragon.svg","images/avatar_hackerman.svg","images/avatar_marvin.svg","images/avatar_tesla.svg","images/avatar_unicorn.svg","resolver.ts","actions/gameActions.ts","state/gameState.ts","context/gameContext.ts","custom-hooks/useGameContext.ts","screens/HomeScreen.tsx","containers/HomeContainer.tsx","screens/WarriorsScreen.tsx","containers/WarriorsContainer.tsx","state/errorState.ts","actions/errorActions.ts","context/errorContext.ts","custom-hooks/useErrorContext.ts","screens/FightScreen.tsx","containers/FightContainer.tsx","screens/ErrorScreen.tsx","containers/ErrorContainer.tsx","components/ResultsImageWrapper.tsx","components/ResultsAnnouncment.tsx","components/OpponentImage.tsx","components/RoundsComponent.tsx","components/FightRounds.tsx","components/FightButtons.tsx","screens/ResultsScreen.tsx","containers/ResultsContainer.tsx","reducer/gameReducer.ts","reducer/errorReducer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ActionType","resolver","values","_context","errors","entries","reduce","acc","name","value","type","message","validateRequired","initialGameState","warriors","image","attacks","selectedWarrior","warriorName","selectedAttacks","GameContext","createContext","state","dispatch","useCustomContext","useContext","HomeScreen","props","warrior","className","onSubmit","to","src","require","default","alt","width","height","register","placeholder","autoComplete","inputs","attack1","onChange","handleOnChange","attack","index","attack2","attack3","HomeView","history","useHistory","useState","find","useForm","handleSubmit","formState","setInputs","data","SetCustomWarrior","payload","push","event","target","WarriorsScreen","title","onClick","setWarrior","WarriorsView","ClearCustomWarrior","SelectWarrior","selectWarrior","initialErrorState","error","reason","undefined","ErrorContext","errorState","errorDispatch","useErrorContext","setError","SetError","clearError","ClearError","FightScreen","FightView","mounted","useRef","useEffect","current","battleRegistrationData","jsonrpc","method","params","application","warriorType","axios","post","then","response","result","catch","err","console","log","ErrorScreen","resetError","closeModal","ErrorContainer","ResultsImageWrapper","fightStatus","children","totalWinner","character","useStyles","makeStyles","txtGreen","color","ResultsAnnouncment","classes","OpponentImage","opponent","WarriorType","Name","RoundsComponent","roundWinner","setRoundWInner","round","Warrior1Attack","Warrior2Attack","num","FightRounds","fightRounds","length","FightButtons","chickenOut","tryAgain","ResultsScreen","ResultsContainer","useParams","setFightStatus","setOpponent","setFightRounds","setTotalWinner","battleResultsData","Attacks","fight","Warrior1","SetFullWarrior","battleResults","Status","Warrior2","Rounds","hostResult","opponentResult","hostAttacks","opponentAttacks","i","gameReducer","action","errorReducer","App","useReducer","Provider","path","exact","component","HomeContainer","WarriorsContainer","FightContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca3de597.chunk.js","sourcesContent":["var map = {\n\t\"./avatar_dragon.svg\": 58,\n\t\"./avatar_hackerman.svg\": 59,\n\t\"./avatar_marvin.svg\": 60,\n\t\"./avatar_tesla.svg\": 61,\n\t\"./avatar_unicorn.svg\": 62\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","export default __webpack_public_path__ + \"static/media/avatar_dragon.abfe7daa.svg\";","export default __webpack_public_path__ + \"static/media/avatar_hackerman.5fd404b9.svg\";","export default __webpack_public_path__ + \"static/media/avatar_marvin.5b39057d.svg\";","export default __webpack_public_path__ + \"static/media/avatar_tesla.2421fbac.svg\";","export default __webpack_public_path__ + \"static/media/avatar_unicorn.6d8eabe7.svg\";","import { Resolver, FieldError } from \"react-hook-form\";\r\n\r\nexport type FormValues = {\r\n  warriorName: string;\r\n  attack1: string;\r\n  attack2: string;\r\n  attack3: string;\r\n};\r\n\r\nfunction validateRequired(\r\n  name: string,\r\n  value: any,\r\n  errors: Record<string, FieldError>\r\n) {\r\n  if (!value || value === \"default\") {\r\n    return {\r\n      ...errors,\r\n      [name]: {\r\n        type: `required`,\r\n        message: `The \"${name}\" field is required`\r\n      }\r\n    };\r\n  }\r\n  return errors;\r\n}\r\n\r\nexport const resolver: Resolver<FormValues> = (\r\n  values,\r\n  _context\r\n) => {\r\n  let errors = {};\r\n    errors = Object.entries(values).reduce(\r\n      (acc, [name, value]) => validateRequired(name, value, acc),\r\n      {}\r\n    );\r\n  return { values, errors };\r\n};","export enum ActionType {\r\n  SelectWarrior,\r\n  SetCustomWarrior,\r\n  SetFullWarrior,\r\n  ClearCustomWarrior,\r\n}\r\n\r\ntype SelectWarrior = {\r\n  type: ActionType.SelectWarrior;\r\n  payload: { id: number };\r\n};\r\n\r\nexport const selectWarrior = (id: number): SelectWarrior => ({\r\n  type: ActionType.SelectWarrior,\r\n  payload: { id },\r\n});\r\n\r\ntype SetCustomWarrior = {\r\n  type: ActionType.SetCustomWarrior;\r\n  payload: { name: string; attacks: number[] };\r\n};\r\n\r\nexport const setCustomWarrior = (\r\n  name: string,\r\n  attacks: number[]\r\n): SetCustomWarrior => ({\r\n  type: ActionType.SetCustomWarrior,\r\n  payload: { name, attacks },\r\n});\r\n\r\ntype SetFullWarrior = {\r\n  type: ActionType.SetFullWarrior;\r\n  payload: { Name: string; WarriorType: number; Attacks: number[] };\r\n};\r\n\r\nexport const setFullWarrior = (\r\n  Name: string,\r\n  WarriorType: number,\r\n  Attacks: number[]\r\n): SetFullWarrior => ({\r\n  type: ActionType.SetFullWarrior,\r\n  payload: { Name, WarriorType, Attacks },\r\n});\r\n\r\ntype ClearCustomWarrior = {\r\n  type: ActionType.ClearCustomWarrior;\r\n};\r\n\r\nexport const clearCustomWarrior = (): ClearCustomWarrior => ({\r\n  type: ActionType.ClearCustomWarrior,\r\n});\r\n\r\nexport type GameActions = SelectWarrior | SetCustomWarrior | ClearCustomWarrior | SetFullWarrior;\r\n","import { GameState } from '../types/GameStateType';\r\n\r\nexport const initialGameState: GameState = {\r\n  warriors: [\r\n    { id: 0, name: \"Marvin\", image: \"avatar_marvin\", attacks: [\"Depression #1\", \"Depression #2\", \"Depression #3\"]},\r\n    { id: 1, name: \"Dragon\", image: \"avatar_dragon\", attacks: [\"Fire-Spitting\", \"Dragon-Claw\", \"Pound\"]},\r\n    { id: 2, name: \"Hackerman\", image: \"avatar_hackerman\", attacks: [\"Cyber\", \"System32 Error\", \"Norton Antivirus\"]},\r\n    { id: 3, name: \"Tesla\", image: \"avatar_tesla\", attacks: [\"Shaker-Machine\", \"AC voltage\", \"Radio Waves\"]},\r\n    { id: 4, name: \"Unicorn\", image: \"avatar_unicorn\", attacks: [ \"Rainbowshit\", \"Candypuke\", \"Cornlove\"]},\r\n  ],\r\n  selectedWarrior: 0,\r\n  warriorName: \"\",\r\n  selectedAttacks: []\r\n};\r\n","import React, { createContext } from \"react\";\r\nimport { initialGameState } from \"../state/gameState\";\r\nimport { GameState } from '../types/GameStateType'\r\nimport { GameActions } from \"../actions/gameActions\";\r\n\r\nexport const GameContext = createContext<{\r\n  state: GameState;\r\n  dispatch: React.Dispatch<GameActions>;\r\n}>({ state: initialGameState, dispatch: () => undefined });\r\n","import { useContext } from \"react\";\r\nimport { GameContext } from \"../context/gameContext\";\r\n\r\nexport const useCustomContext = () => useContext(GameContext)\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Props } from \"../types/HomePropsType\";\r\n\r\nimport \"./HomeScreen.css\"\r\n\r\nexport default function HomeScreen(props: Props) {\r\n  if (!props.warrior) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title-wrapper\">\r\n          <h1>WhaWhai</h1>\r\n          <p>No default warrior</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"title-wrapper\">\r\n        <h1>WhaWhai</h1>\r\n      </div>\r\n\r\n      <form onSubmit={props.onSubmit} id=\"fightForm\" className=\"form-wrapper\">\r\n        <div className=\"form-wrapper__basic-data\">\r\n          <NavLink to=\"/warriors\">\r\n            <img\r\n              src={require(`../images/${props.warrior.image}.svg`).default}\r\n              alt={props.warrior.name}\r\n              width=\"100\"\r\n              height=\"100\"\r\n            />\r\n          </NavLink>\r\n          <input\r\n            {...props.register(\"warriorName\")}\r\n            type=\"text\"\r\n            placeholder=\"$WARRIOR-NAME\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n          {props.errors?.warriorName && (\r\n            <p className=\"error-message\">{props.errors.warriorName.message}</p>\r\n          )}\r\n\r\n        <div className=\"form-wrapper__select-data\">\r\n          <select className={`${props.inputs.attack1 ? \"attack-selected\" : \"\"}`} id=\"attack1\" {...props.register(\"attack1\")} onChange={props.handleOnChange}>\r\n            <option value=\"\">Attack For Round #1</option>\r\n            {props.warrior.attacks.map((attack: string, index: number) => (\r\n              <option key={index} value={index}>\r\n                {attack}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select className={`${props.inputs.attack2 ? \"attack-selected\" : \"\"}`} id=\"attack2\" {...props.register(\"attack2\")} onChange={props.handleOnChange}>\r\n            <option value=\"\">Attack For Round #2</option>\r\n            {props.warrior.attacks.map((attack: string, index: number) => (\r\n              <option key={index} value={index}>\r\n                {attack}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select className={`${props.inputs.attack3 ? \"attack-selected\" : \"\"}`} id=\"attack3\" {...props.register(\"attack3\")} onChange={props.handleOnChange}>\r\n            ,<option value=\"\">Attack For Round #3</option>\r\n            {props.warrior.attacks.map((attack: string, index: number) => (\r\n              <option key={index} value={index}>\r\n                {attack}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        {props.errors?.attack1 && <p className=\"error-message\">{props.errors.attack1.message}</p>}\r\n        {props.errors?.attack2 && <p className=\"error-message\">{props.errors.attack2.message}</p>}\r\n        {props.errors?.attack3 && <p className=\"error-message\">{props.errors.attack3.message}</p>}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          name=\"startGame\"\r\n          id=\"startGame\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          FIGHT!!!\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormValues, resolver } from \"../resolver\";\r\n\r\nimport { useCustomContext } from \"../custom-hooks/useGameContext\";\r\nimport { setCustomWarrior } from \"../actions/gameActions\";\r\n\r\nimport HomeScreen from '../screens/HomeScreen'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Warrior } from \"../types/WarriorType\";\r\n\r\nexport default function HomeView() {\r\n  const { state, dispatch } = useCustomContext();\r\n  const history = useHistory();\r\n  const [warrior] = useState(state.warriors.find((warrior: Warrior) => warrior.id === state.selectedWarrior));\r\n  const {register, handleSubmit, formState: { errors }} = useForm<FormValues>({resolver,});\r\n  const [inputs, setInputs] = useState({ attack1: false, attack2: false, attack3: false})\r\n\r\n  const handleOnChange = (event: any) => {\r\n    setInputs({...inputs, [event.target.name]: (event.target.value ? true : false)})\r\n  }\r\n\r\n  const onSubmit = handleSubmit((data) => {\r\n    dispatch(setCustomWarrior(data.warriorName, [+data.attack1, +data.attack2, +data.attack3,]));\r\n    history.push(\"/fight\");\r\n  });\r\n\r\n  return (\r\n    <HomeScreen \r\n      warrior={warrior} \r\n      onSubmit={onSubmit} \r\n      state={state} \r\n      register={register} \r\n      errors={errors} \r\n      inputs={inputs} \r\n      handleOnChange={handleOnChange}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Props } from '../types/WarriorsPropsType';\r\nimport { Warrior } from '../types/WarriorType';\r\n\r\nimport './WarriorsScreen.css'\r\n\r\nexport default function WarriorsScreen(props: Props) {\r\n  if (!props.state.warriors) {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>No warriors in state!</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"title-wrapper\">\r\n        <NavLink to=\"/\">\r\n          <span className=\"left-arrow\"></span>\r\n          <h1>TANGATA TOA</h1>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className=\"warriors-wrapper\">\r\n        { props.state.warriors.map((warrior: Warrior, index: number) => {\r\n            if (warrior.id !== props.state.selectedWarrior) {\r\n              return (\r\n                <img\r\n                  key={index}\r\n                  src={require(`../images/${warrior.image}.svg`).default}\r\n                  alt={warrior.name}\r\n                  title={warrior.name}\r\n                  onClick={() => props.setWarrior(warrior.id)}\r\n                />\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCustomContext } from '../custom-hooks/useGameContext'\r\nimport { selectWarrior, clearCustomWarrior } from '../actions/gameActions'\r\nimport WarriorsScreen from '../screens/WarriorsScreen'\r\n\r\nexport default function WarriorsView() {\r\n  const { state, dispatch } = useCustomContext();\r\n  const history = useHistory();\r\n\r\n  const setWarrior = (id: number) => {\r\n    dispatch(clearCustomWarrior());\r\n    dispatch(selectWarrior(id));\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return ( <WarriorsScreen state={state} setWarrior={(id:number) => setWarrior(id)}/> );\r\n}\r\n","export interface ErrorState {\r\n  error: boolean;\r\n  message: string | null;\r\n  code: number | null;\r\n  reason: string | undefined;\r\n  type: string;\r\n}\r\n\r\nexport const initialErrorState: ErrorState = {\r\n  error: false,\r\n  message: null,\r\n  code: null,\r\n  reason: undefined,\r\n  type: 'info'\r\n};","export enum ActionType {\r\n  SetError,\r\n  ClearError,\r\n}\r\n\r\ntype SetError = {\r\n  type: ActionType.SetError;\r\n  payload: {message: string, code: number, reason: string  | undefined, type: string};\r\n}\r\n\r\nexport const setError = (message: string, code: number, reason: string | undefined, type: string): SetError => ({\r\n  type: ActionType.SetError,\r\n  payload: { message, code, reason, type },\r\n});\r\n\r\ntype ClearError = {\r\n  type: ActionType.ClearError;\r\n}\r\n\r\nexport const clearError = (): ClearError => ({\r\n  type: ActionType.ClearError,\r\n});\r\n\r\nexport type ErrorActions = SetError | ClearError\r\n","import React, { createContext } from \"react\";\r\nimport { ErrorState, initialErrorState } from \"../state/errorState\";\r\nimport { ErrorActions } from \"../actions/errorActions\";\r\n\r\nexport const ErrorContext = createContext<{\r\n  errorState: ErrorState;\r\n  errorDispatch: React.Dispatch<ErrorActions>;\r\n}>({ errorState: initialErrorState, errorDispatch: () => undefined });\r\n","import { useContext } from \"react\";\r\nimport { ErrorContext } from \"../context/errorContext\";\r\n\r\nexport const useErrorContext = () => useContext(ErrorContext)\r\n","import React from \"react\";\r\nimport { Props } from \"../types/FightPropsType\";\r\n\r\nimport \"./FightScreen.css\";\r\n\r\nexport default function FightScreen(props: Props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"fight-name\">\r\n        <h1>PAKIPAKI</h1>\r\n      </div>\r\n\r\n      <div className=\"fight-wrapper\">\r\n        <div className=\"fight-wrapper__item\">\r\n          <p>{props.state.warriorName}</p>\r\n          <img\r\n            src={\r\n              require(`../images/${\r\n                props.state.warriors[props.state.selectedWarrior].image\r\n              }.svg`).default\r\n            }\r\n            alt={props.state.warriorName}\r\n          />\r\n        </div>\r\n        <div className=\"fight-wrapper__item\">\r\n          <h2>VS</h2>\r\n        </div>\r\n        <div className=\"fight-wrapper__item\">\r\n          <p>Unknown</p>\r\n          <img\r\n            className=\"unknown-image\"\r\n            src=\"https://via.placeholder.com/200x200/FFFFFF/FFFF00?text=?\"\r\n            alt=\"Unknown\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useCustomContext } from \"../custom-hooks/useGameContext\";\r\nimport { useErrorContext } from \"../custom-hooks/useErrorContext\";\r\nimport { setError } from \"../actions/errorActions\";\r\n\r\nimport { BattleRegistrationType } from \"../types/BattleRegistrationType\";\r\nimport FightScreen from \"../screens/FightScreen\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function FightView() {\r\n  const { state } = useCustomContext();\r\n  const { errorDispatch } = useErrorContext();\r\n  const mounted = useRef(false);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    const battleRegistrationData: BattleRegistrationType = {\r\n      jsonrpc: \"2.0\",\r\n      method: \"Register\",\r\n      params: {\r\n        application: {\r\n          name: state.warriorName,\r\n          warriorType: state.selectedWarrior,\r\n          attacks: state.selectedAttacks,\r\n        },\r\n      },\r\n      id: \"1\",\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://recruitment-test.ants.house/jsonrpc2/whawhai/v1\",\r\n        battleRegistrationData\r\n      )\r\n      .then((response) => {\r\n        if (response.data?.result?.id) {\r\n          history.push(\"/fight/\" + response.data.result.id);\r\n        } else if (response.data.error) {\r\n          errorDispatch(\r\n            setError(\r\n              response.data.error.message,\r\n              response.data.error.code,\r\n              response.data.error?.data?.reason,\r\n              \"error\"\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, [\r\n    state.selectedAttacks,\r\n    state.selectedWarrior,\r\n    state.warriorName,\r\n    errorDispatch,\r\n    history,\r\n  ]);\r\n\r\n  return <FightScreen state={state} />;\r\n}\r\n","import React from \"react\";\r\nimport { Props } from \"../types/ErrorPropsType\";\r\n\r\nimport \"./ErrorScreen.css\";\r\n\r\nexport default function ErrorScreen(props: Props) {\r\n  return (\r\n    <div \r\n      onClick={props.errorState.type === 'error' ? props.resetError : props.closeModal} \r\n      className={`backdrop ${ props.errorState.code ? \"backdrop-show\" : \"\"}`}>\r\n      <div className={`modal modal-show modal-${props.errorState.type}`}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h4>{props.errorState.type}</h4>\r\n            <i \r\n              onClick={props.errorState.type === 'error' ? props.resetError : props.closeModal} \r\n              className=\"close\" \r\n            />\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>{props.errorState.reason ? props.errorState.reason : props.errorState.message }</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { useErrorContext } from \"../custom-hooks/useErrorContext\";\r\nimport { clearError } from \"../actions/errorActions\";\r\n\r\nimport ErrorScreen from '../screens/ErrorScreen';\r\n\r\nexport default function ErrorContainer() {\r\n  const { errorState, errorDispatch } = useErrorContext();\r\n  let history = useHistory()\r\n\r\n  function resetError() {\r\n    errorDispatch(clearError())\r\n    history.push(\"/\")\r\n  }\r\n  \r\n  function closeModal() {\r\n    errorDispatch(clearError())\r\n  }\r\n\r\n  return (\r\n    <ErrorScreen errorState={errorState} resetError={resetError} closeModal={closeModal} />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Props } from '../types/ResultsImageWrapperType';\r\n\r\nimport './ResultsImageWrapper.css';\r\n\r\nexport default function ResultsImageWrapper(props: Props) {\r\n  if ( props.fightStatus < 2 ) {\r\n    return <>{props.children}</>\r\n  }\r\n\r\n  return (\r\n    <div className={`\r\n      ${props.totalWinner === props.character ? \"total-winner\" : \"\" }\r\n      ${props.totalWinner === 'draw' ? \"draw-game\" : \"\" } `}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Props } from \"../types/ResultsAnnouncmentType\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  txtGreen: {\r\n    color: '#73ffa0'\r\n  }\r\n})\r\n\r\nexport default function ResultsAnnouncment(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  if (props.totalWinner === \"\" || props.fightStatus < 2) {\r\n    return <></>;\r\n  }\r\n\r\n  if (props.totalWinner === \"draw\") {\r\n    return <p>DRAWN</p>;\r\n  }\r\n\r\n  return (\r\n    <p className={classes.txtGreen}>\r\n      {props.character === props.totalWinner && \"WINNER\"}\r\n    </p>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Props } from '../types/OpponentImageType'\r\n\r\nexport default function OpponentImage(props: Props) {\r\n \r\n  return (\r\n  <>\r\n    { props.fightStatus >= 1 ? (\r\n        <img\r\n          src={\r\n            require(`../images/${\r\n              props.state.warriors[props?.opponent?.WarriorType ? props.opponent.WarriorType : 0].image\r\n            }.svg`).default\r\n          }\r\n          alt={props.opponent?.Name ? props.opponent.Name : \"fail 1\"}\r\n          width=\"200\"\r\n          height=\"200\"\r\n        />\r\n      ) : (\r\n        <img\r\n          className=\"unknown-image\"\r\n          src=\"https://via.placeholder.com/200x200/FFFFFF/FFFF00?text=?\"\r\n          alt=\"Unknown\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n        />\r\n      )\r\n    }\r\n  </>\r\n)}","import React, { useEffect, useState } from \"react\";\r\nimport { Props } from \"../types/RoundsPropsType\";\r\n\r\nimport \"./RoundsComponent.css\";\r\n\r\nexport default function RoundsComponent(props: Props) {\r\n  const [roundWinner, setRoundWInner] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      (props.round.Warrior1Attack === 0 && props.round.Warrior2Attack === 1) ||\r\n      (props.round.Warrior1Attack === 1 && props.round.Warrior2Attack === 2) ||\r\n      (props.round.Warrior1Attack === 2 && props.round.Warrior2Attack === 0)\r\n    ) {\r\n      setRoundWInner(2);\r\n    } else if (\r\n      (props.round.Warrior1Attack === 1 && props.round.Warrior2Attack === 0) ||\r\n      (props.round.Warrior1Attack === 2 && props.round.Warrior2Attack === 1) ||\r\n      (props.round.Warrior1Attack === 0 && props.round.Warrior2Attack === 2)\r\n    ) {\r\n      setRoundWInner(1);\r\n    } else {\r\n      setRoundWInner(0);\r\n    }\r\n\r\n    return () => {};\r\n  }, [props.round.Warrior1Attack, props.round.Warrior2Attack]);\r\n\r\n  return (\r\n    <p className=\"single-round\">\r\n      <span>{props.num + 1}. </span>\r\n      <span className={`${roundWinner === 2 ? \"round-lost\" : \"\"}`}>\r\n        {\r\n          props.state.warriors[props.state.selectedWarrior].attacks[\r\n            props.round.Warrior1Attack\r\n          ]\r\n        }\r\n      </span>\r\n      <span> - </span>\r\n      <span className={`${roundWinner === 1 ? \"round-lost\" : \"\"}`}>\r\n        {\r\n          props.state.warriors[props?.opponent?.WarriorType ? props.opponent.WarriorType : 0].attacks[\r\n            props.round.Warrior2Attack\r\n          ]\r\n        }\r\n      </span>\r\n    </p>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Props } from \"../types/FightRoundsType\";\r\n\r\nimport { RoundType } from \"../types/RoundType\";\r\nimport RoundsComponent from \"./RoundsComponent\";\r\n\r\nexport default function FightRounds(props: Props) {\r\n  return (\r\n    <>\r\n      {props?.fightRounds?.length ? (\r\n        <div className=\"fight-rounds\">\r\n          {props.fightRounds.map((round: RoundType, index: number) => (\r\n            <RoundsComponent\r\n              key={index}\r\n              num={index}\r\n              state={props.state}\r\n              round={round}\r\n              opponent={props.opponent}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Props } from \"../types/FightButtonsType\";\r\n\r\nexport default function FightButtons(props: Props) {\r\n  return (\r\n    <div className=\"flex-center\">\r\n     \r\n        <button className=\"btn btn-primary\" onClick={ props.fightStatus ===  1 ? props.chickenOut : props.tryAgain}>\r\n        { props.fightStatus === 0 && \"PANIC!!!\" }\r\n        { props.fightStatus === 1 && \"SURRENDER!!!\" }\r\n        { props.fightStatus === 2 && \"AGAIN!!!\" }\r\n        </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Props } from '../types/ResultsPropsType'\r\n\r\nimport ResultsImageWrapper from \"../components/ResultsImageWrapper\"\r\n\r\nimport './ResultsScreen.css'\r\nimport ResultsAnnouncment from '../components/ResultsAnnouncment';\r\nimport OpponentImage from '../components/OpponentImage';\r\nimport FightRounds from '../components/FightRounds';\r\nimport FightButtons from '../components/FightButtons';\r\n\r\nexport default function ResultsScreen(props:Props) {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"fight-name\">\r\n          <h1>PAKIPAKI</h1>\r\n        </div>\r\n\r\n        <div className=\"fight-wrapper\">\r\n          <div className=\"fight-wrapper__item\">\r\n            <p>{props.state.warriorName}</p>\r\n\r\n            <ResultsImageWrapper fightStatus={props.fightStatus} totalWinner={props.totalWinner} character={\"host\"}>\r\n              <img\r\n                src={\r\n                  require(`../images/${\r\n                    props.state.warriors[props.state.selectedWarrior ? props.state.selectedWarrior : 0].image\r\n                  }.svg`).default\r\n                }\r\n                alt={props.state.warriorName}\r\n                width=\"200\"\r\n                height=\"200\"\r\n                />\r\n            </ ResultsImageWrapper>\r\n            <ResultsAnnouncment fightStatus={props.fightStatus} totalWinner={props.totalWinner} character={\"host\"} />\r\n\r\n          </div>\r\n          <div className=\"fight-wrapper__item\">\r\n            <h2>VS</h2>\r\n          </div>\r\n          <div className=\"fight-wrapper__item\">\r\n            <p>{props?.opponent?.Name ? props.opponent.Name : \"Unknown\"}</p>\r\n            <ResultsImageWrapper fightStatus={props.fightStatus} totalWinner={props.totalWinner} character={\"opponent\"}>\r\n              <OpponentImage fightStatus={props.fightStatus} opponent={props.opponent} state={props.state}/>\r\n            </ResultsImageWrapper>\r\n            <ResultsAnnouncment fightStatus={props.fightStatus} totalWinner={props.totalWinner} character={\"opponent\"} />\r\n          </div>\r\n        </div>\r\n\r\n        {props.fightStatus < 1 && (\r\n          <div className=\"player-waiting\">\r\n            <span>WAITING FOR 2ND PLAYER TO JOIN...</span>\r\n          </div>\r\n        )}\r\n\r\n        {props.totalWinner !== 'draw' && props.fightStatus === 1 && (\r\n          <div className=\"player-waiting\">\r\n            <span>\r\n              {props.totalWinner === 'host' && `BEATING THE SHIT OUT OF ${props.opponent?.Name}`}\r\n              {props.totalWinner === 'opponent' && `BEATING THE SHIT OUT OF ${props.state.warriorName}`}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <FightRounds fightRounds={props.fightRounds} state={props.state} opponent={props.opponent} />\r\n\r\n        <FightButtons fightStatus={props.fightStatus} tryAgain={props.tryAgain} chickenOut={props.chickenOut} />\r\n      </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { RoundType } from \"../types/RoundType\";\r\nimport { BattleResultsType } from \"../types/BattleResultsType\";\r\nimport { OpponentType } from \"../types/OpponentType\";\r\n\r\nimport ResultsScreen from \"../screens/ResultsScreen\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { setError } from \"../actions/errorActions\";\r\nimport { useErrorContext } from \"../custom-hooks/useErrorContext\";\r\nimport { useCustomContext } from \"../custom-hooks/useGameContext\";\r\nimport { setFullWarrior } from \"../actions/gameActions\";\r\n\r\nexport default function ResultsContainer() {\r\n  let history = useHistory();\r\n  let { id } = useParams<{ id: string }>();\r\n  const { state, dispatch } = useCustomContext();\r\n  const { errorDispatch } = useErrorContext();\r\n  const [fightStatus, setFightStatus] = useState(0);\r\n  const [opponent, setOpponent] = useState<undefined | OpponentType>(undefined);\r\n  const [fightRounds, setFightRounds] = useState<RoundType[]>([]);\r\n\r\n  const mounted = useRef(false);\r\n  const [totalWinner, setTotalWinner] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!state.warriorName) {\r\n      const battleResultsData: BattleResultsType = {\r\n        jsonrpc: \"2.0\",\r\n        id: \"1\",\r\n        method: \"Status\",\r\n        params: {\r\n          id,\r\n        },\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"https://recruitment-test.ants.house/jsonrpc2/whawhai/v1\",\r\n          battleResultsData\r\n        )\r\n        .then((response) => {\r\n          console.log(\"nema heroja\", response)\r\n          if (response.data.error) {\r\n            errorDispatch(\r\n              setError(\r\n                response.data.error.message,\r\n                response.data.error.code,\r\n                response.data.error?.data?.reason,\r\n                \"error\"\r\n              )\r\n            );\r\n          } else if (response.data.result.fight.Warrior1) {\r\n            dispatch(setFullWarrior(\r\n              response.data.result.fight.Warrior1.Name, \r\n              response.data.result.fight.Warrior1.WarriorType, \r\n              response.data.result.fight.Warrior1.Attacks)\r\n            )\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    return () => {};\r\n  }, [state.warriorName, dispatch, errorDispatch, id]);\r\n\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n\r\n    const battleResultsData: BattleResultsType = {\r\n      jsonrpc: \"2.0\",\r\n      id: \"1\",\r\n      method: \"Status\",\r\n      params: {\r\n        id,\r\n      },\r\n    };\r\n\r\n    function battleResults() {\r\n      axios\r\n        .post(\r\n          \"https://recruitment-test.ants.house/jsonrpc2/whawhai/v1\",\r\n          battleResultsData\r\n        )\r\n        .then((response) => {\r\n          if (response.data.error) {\r\n            errorDispatch(\r\n              setError(\r\n                response.data.error.message,\r\n                response.data.error.code,\r\n                response.data.error?.data?.reason,\r\n                \"error\"\r\n              )\r\n            );\r\n          } else if (\r\n            +response.data.result.fight.Status === 1 &&\r\n            mounted.current\r\n          ) {\r\n            setOpponent({ ...response.data.result.fight.Warrior2 });\r\n            setFightStatus(1);\r\n            battleResults();\r\n          } else if (\r\n            +response.data.result.fight.Status === 2 &&\r\n            mounted.current\r\n          ) {\r\n            setFightRounds(response.data.result.fight.Rounds);\r\n            setOpponent({ ...response.data.result.fight.Warrior2 });\r\n            setFightStatus(2);\r\n          } else if (\r\n            +response.data.result.fight.Status < 2 &&\r\n            mounted.current\r\n          ) {\r\n            battleResults();\r\n          } else {\r\n            console.log(response, \"Something unpredicted happened!\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    battleResults();\r\n\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, [errorDispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (fightStatus >= 1 && totalWinner === \"\") {\r\n      let hostResult = 0;\r\n      let opponentResult = 0;\r\n\r\n      let hostAttacks = state.selectedAttacks;\r\n      let opponentAttacks = opponent?.Attacks;\r\n\r\n      if (opponentAttacks && hostAttacks) {\r\n\r\n        for (let i = 0; i < hostAttacks.length; i++) {\r\n          if (\r\n            (hostAttacks[i] === 0 &&\r\n              opponentAttacks[i] === 1) ||\r\n            (hostAttacks[i] === 1 &&\r\n              opponentAttacks[i] === 2) ||\r\n            (hostAttacks[i] === 2 &&\r\n              opponentAttacks[i] === 0)\r\n          ) {\r\n            opponentResult += 1;\r\n          } else if (\r\n            (hostAttacks[i] === 1 &&\r\n              opponentAttacks[i] === 0) ||\r\n            (hostAttacks[i] === 2 &&\r\n              opponentAttacks[i] === 1) ||\r\n            (hostAttacks[i] === 0 &&\r\n              opponentAttacks[i] === 2)\r\n          ) {\r\n            hostResult += 1;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      hostResult > opponentResult\r\n        ? setTotalWinner(\"host\")\r\n        : opponentResult > hostResult\r\n        ? setTotalWinner(\"opponent\")\r\n        : setTotalWinner(\"draw\");\r\n    }\r\n    return () => {};\r\n  }, [fightStatus, totalWinner, opponent?.Attacks, state.selectedAttacks]);\r\n\r\n  function tryAgain() {\r\n    history.push(\"/\")\r\n  }\r\n\r\n  function chickenOut() {\r\n    errorDispatch(\r\n      setError(\r\n        \"Too late to chicken out\",\r\n        420,\r\n        \"You can't quit now\",\r\n        \"info\"\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ResultsScreen\r\n      state={state}\r\n      fightStatus={fightStatus}\r\n      opponent={opponent}\r\n      fightRounds={fightRounds}\r\n      totalWinner={totalWinner}\r\n      tryAgain={tryAgain}\r\n      chickenOut={chickenOut}\r\n    />\r\n  );\r\n}\r\n","import { GameState } from \"../types/GameStateType\";\r\nimport { GameActions, ActionType } from \"../actions/gameActions\";\r\n\r\nexport function gameReducer(state: GameState, action: GameActions): GameState {\r\n  switch (action.type) {\r\n    case ActionType.SelectWarrior:\r\n      return { ...state, selectedWarrior: action.payload.id };\r\n\r\n    case ActionType.SetCustomWarrior:\r\n      return {...state, warriorName: action.payload.name, selectedAttacks: [...action.payload.attacks]};\r\n\r\n    case ActionType.SetFullWarrior: \r\n      return {...state, warriorName: action.payload.Name, selectedWarrior: action.payload.WarriorType, selectedAttacks: action.payload.Attacks};\r\n    \r\n    case ActionType.ClearCustomWarrior:\r\n      return {...state, warriorName: \"\", selectedAttacks: []}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ErrorState } from \"../state/errorState\";\r\nimport { ErrorActions, ActionType } from \"../actions/errorActions\";\r\n\r\nexport function errorReducer(errorState: ErrorState, action: ErrorActions): ErrorState {\r\n  switch (action.type) {\r\n    case ActionType.SetError:\r\n      return {\r\n        ...errorState, \r\n        error: true, \r\n        message: \r\n        action.payload.message, \r\n        code: action.payload.code, \r\n        reason: action.payload.reason,\r\n        type: action.payload.type\r\n      }\r\n    \r\n    case ActionType.ClearError:\r\n      return {...errorState, error: false, message: \"\", code: 0, reason: undefined}\r\n\r\n    default:\r\n      return errorState;\r\n  }\r\n}\r\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport HomeContainer from \"./containers/HomeContainer\";\nimport WarriorsContainer from \"./containers/WarriorsContainer\";\nimport FightContainer from \"./containers/FightContainer\";\nimport ErrorContainer from \"./containers/ErrorContainer\";\nimport ResultsContainer from \"./containers/ResultsContainer\";\n\nimport { GameContext } from \"./context/gameContext\";\nimport { gameReducer } from \"./reducer/gameReducer\";\nimport { initialGameState } from \"./state/gameState\";\n\nimport { ErrorContext } from \"./context/errorContext\";\nimport { errorReducer } from \"./reducer/errorReducer\";\nimport { initialErrorState } from \"./state/errorState\";\n\nfunction App() {\n  const [errorState, errorDispatch] = useReducer(errorReducer, initialErrorState);\n  const [state, dispatch] = useReducer(gameReducer, initialGameState);\n\n  return (\n    <>\n      <Router>\n        <ErrorContext.Provider value={{ errorState, errorDispatch }}>\n          <GameContext.Provider value={{ state, dispatch }}>\n            <Switch>\n              <Route path=\"/\" exact component={HomeContainer} />\n              <Route path=\"/warriors\" component={WarriorsContainer} />\n              <Route path=\"/fight/:id\" component={ResultsContainer} />\n              <Route path=\"/fight\" component={FightContainer} />\n              <Route path=\"*\" component={HomeContainer} />\n            </Switch>\n            <ErrorContainer />\n          </GameContext.Provider>\n        </ErrorContext.Provider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}